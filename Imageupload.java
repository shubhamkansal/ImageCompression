/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package image.compression;

//import com.sun.xml.internal.bind.v2.util.ByteArrayOutputStreamEx;
import static image.compression.MyImages.getButton;
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Iterator;
import javax.imageio.IIOImage;
import javax.imageio.ImageIO;
import javax.imageio.ImageWriteParam;
import javax.imageio.ImageWriter;
import javax.imageio.stream.ImageOutputStream;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.html.HTMLDocument;
import net.coobird.thumbnailator.Thumbnails;
//import com.sun.xml.internal.bind.v2.util.ByteArrayOutputStreamEx;

/**
 *
 * @author Vishesh
 */
public class Imageupload extends javax.swing.JFrame {
    String filename,user,title;
    private ImageIcon format=null;
    byte[] nimage=null;
    byte[] oimage=null;
    byte[] n2image=null;
    byte[] n3image=null;
    public Imageupload() {
        initComponents();
        user="Guest";
        l3.setVisible(false);       
        r1.setVisible(false);
        r2.setVisible(false);
        r3.setVisible(false);
    }
    public Imageupload(String u)
    {
        initComponents();
        user=u;
        l3.setVisible(false);       
        r1.setVisible(false);
        r2.setVisible(false);
        r3.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileselect = new javax.swing.JFileChooser();
        buttonGroup1 = new javax.swing.ButtonGroup();
        l1 = new java.awt.TextField();
        button1 = new java.awt.Button();
        button2 = new java.awt.Button();
        l2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        r1 = new javax.swing.JRadioButton();
        r2 = new javax.swing.JRadioButton();
        r3 = new javax.swing.JRadioButton();
        l3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        l1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l1ActionPerformed(evt);
            }
        });

        button1.setLabel("Browse");
        button1.setMaximumSize(new java.awt.Dimension(116, 48));
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        button2.setLabel("Upload");
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Logout");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("My Images");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        buttonGroup1.add(r1);
        r1.setText("Low");

        buttonGroup1.add(r2);
        r2.setText("Normal");

        buttonGroup1.add(r3);
        r3.setText("High");

        l3.setText("Choose Quality:");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\vishesh bangla\\Desktop\\CUHP2 copy.png")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(l3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(l2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(35, 35, 35)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(button1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(button2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addContainerGap(110, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(r3)
                                    .addComponent(r2)
                                    .addComponent(r1))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(l1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(r2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(r3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        // TODO add your handling code here:
        try
        {
            myconnection obj=new myconnection();
            String q="insert into tbimages(Username,Title,Original,Compressed)values(?,?,?,?)";
            PreparedStatement pst=obj.db.prepareStatement(q);
            if(oimage==null)
                JOptionPane.showMessageDialog(this,"Please Select an image");
            else
            {
                pst.setString(1, user);
                pst.setString(2, title);
                pst.setBytes(3, oimage);
                if(r1.isSelected())
                {
                pst.setBytes(4, nimage);
                }
                else if(r2.isSelected())
                {
                pst.setBytes(4, n2image);
                }
                else if(r3.isSelected())
                {
                pst.setBytes(4, n3image);
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Please Choose Quality!");
                }
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Upload Complete!");
            }
        }
        catch(Exception e)
        {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_button2ActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        // TODO add your handling code here:
         fileselect.setFileSelectionMode(JFileChooser.FILES_ONLY);
         fileselect.addChoosableFileFilter(new FileNameExtensionFilter("Images", "jpg", "png", "gif", "bmp"));
         int n=fileselect.showOpenDialog(Imageupload.this);
         System.out.println(n);
         if(n==fileselect.APPROVE_OPTION)
         {
             File f=fileselect.getSelectedFile();
             String s1=f.getName();
             int i=s1.lastIndexOf(".");
             String s2=s1.substring(i+1);
             filename=f.getAbsolutePath();
             l1.setText(f.getName());
             title=f.getName();
             try
             {               
                 ByteArrayOutputStream baos=new ByteArrayOutputStream(37628);
                 ImageOutputStream ios=ImageIO.createImageOutputStream(baos);
                 
                 ByteArrayOutputStream baos2=new ByteArrayOutputStream(37628);
                 ImageOutputStream ios2=ImageIO.createImageOutputStream(baos2);
                 
                 ByteArrayOutputStream baos3=new ByteArrayOutputStream(37628);
                 ImageOutputStream ios3=ImageIO.createImageOutputStream(baos3);
                 //l2.setVisible(true);
                 
                 File input= new File(filename);
                 BufferedImage image1=ImageIO.read(input);
                 BufferedImage image2=ImageIO.read(input);
                 BufferedImage image3=ImageIO.read(input);
                 BufferedImage icon=Thumbnails.of(image1).size(l2.getWidth(),l2.getHeight()).asBufferedImage();
                 ImageIcon licon=new ImageIcon(icon);
                 l2.setIcon(licon);
                 l3.setVisible(true);
                 r1.setVisible(true);
                 r2.setVisible(true);
                 r3.setVisible(true);
                 File compressedImageFile = new File("compress.jpg");
                 OutputStream os=new FileOutputStream(compressedImageFile);
                 Iterator<ImageWriter>writers=ImageIO.getImageWritersByFormatName(s2);
                 ImageWriter writer=(ImageWriter) writers.next();
                 writer.setOutput(ios);                 
                 ImageWriteParam param1 = writer.getDefaultWriteParam();
                 param1.setCompressionMode(ImageWriteParam.MODE_EXPLICIT);
                 param1.setCompressionQuality(.05f);
                 writer.write(null, new IIOImage(image1, null, null), param1);
                 
                 Iterator<ImageWriter>writers2=ImageIO.getImageWritersByFormatName(s2);
                 ImageWriter writer2=(ImageWriter) writers2.next();
                 writer2.setOutput(ios2);                 
                 ImageWriteParam param2 = writer2.getDefaultWriteParam();
                 param2.setCompressionMode(ImageWriteParam.MODE_EXPLICIT);
                 param2.setCompressionQuality(.15f);
                 writer2.write(null, new IIOImage(image2, null, null), param2);
                 
                 Iterator<ImageWriter>writers3=ImageIO.getImageWritersByFormatName(s2);
                 ImageWriter writer3=(ImageWriter) writers3.next();
                 writer3.setOutput(ios3);                 
                 ImageWriteParam param3 = writer3.getDefaultWriteParam();
                 param3.setCompressionMode(ImageWriteParam.MODE_EXPLICIT);
                 param3.setCompressionQuality(.4f);
                 writer3.write(null, new IIOImage(image3, null, null), param3);
                 ByteArrayOutputStream bos1=new ByteArrayOutputStream();
                 try
                 {
                     byte[] buff=new byte[1024];
                     FileInputStream fis=new FileInputStream(input);
                     for(int readNum;(readNum=fis.read(buff))!=-1;)
                     {
                         bos1.write(buff,0,readNum);
                     }
                 }
                 catch(Exception e)
                 {
                     System.out.println(e.getMessage());
                 }
                 ByteArrayInputStream bai1=new ByteArrayInputStream(baos.toByteArray());
                 RenderedImage out=ImageIO.read(bai1);
                 ByteArrayInputStream bai2=new ByteArrayInputStream(baos2.toByteArray());
                 RenderedImage out2=ImageIO.read(bai2);
                 ByteArrayInputStream bai3=new ByteArrayInputStream(baos3.toByteArray());
                 RenderedImage out3=ImageIO.read(bai3);
                 double size=baos.toByteArray().length;
                 int size2=baos2.toByteArray().length;
                 int size3=baos3.toByteArray().length;
                 System.out.println(""+size);
                 nimage=baos.toByteArray();
                 n2image=baos2.toByteArray();
                 n3image=baos3.toByteArray();
                 oimage=bos1.toByteArray();
             }
             catch(Exception e)
             {
                 System.out.println(e.getMessage());
             }
         }
    }//GEN-LAST:event_button1ActionPerformed

    private void l1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_l1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        MyAccount obj=new MyAccount(user);
        obj.setVisible(true);
        this.setVisible(false);
        obj.setLocation(this.getLocation());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Login obj1=new Login();
        obj1.setVisible(true);
        this.setVisible(false);
        obj1.setLocation(this.getLocation());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        MyImages obj=new MyImages(user);
        obj.setVisible(true);
        this.setVisible(false);
        obj.setLocation(this.getLocation());
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Imageupload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Imageupload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Imageupload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Imageupload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Imageupload().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    private java.awt.Button button2;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JFileChooser fileselect;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private java.awt.TextField l1;
    private javax.swing.JLabel l2;
    private javax.swing.JLabel l3;
    private javax.swing.JRadioButton r1;
    private javax.swing.JRadioButton r2;
    private javax.swing.JRadioButton r3;
    // End of variables declaration//GEN-END:variables
}
