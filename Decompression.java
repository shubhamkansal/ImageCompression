/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package image.compression;

import java.awt.Container;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javafx.concurrent.Task;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Vishesh
 */
public class Decompression extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form Decompression
     */
       
    String user,name;
    private static final int IMG_WIDTH = 135;
    private static final int IMG_HEIGHT = 100;
    public Decompression() {
        initComponents();
        user="Guest";
        get();
       // jProgressBar1.setVisible(false);
    }
     public Decompression(String u) {
        initComponents();
        user=u;
        get();
    }
     
      public void actionPerformed (ActionEvent e) {
      
     
   }
     void get()
     {
         try
         {
            c1.add("Choose Image");
            myconnection obj=new myconnection();
            String q="select * from tbimages where username=?";
            ResultSet rs;
            PreparedStatement pst=obj.db.prepareStatement(q);
            pst.setString(1,user);
            rs=pst.executeQuery();
            while(rs.next())
            {
                name=rs.getString("Title");
                c1.add(rs.getString("Title")+"_"+rs.getInt("Id"));
            }
         }
         catch(Exception e)
         {
             System.out.println(e.getMessage());
         }
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        c1 = new java.awt.Choice();
        l1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        ff = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        c1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c1MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c1MouseReleased(evt);
            }
        });
        c1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                c1ItemStateChanged(evt);
            }
        });
        c1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                c1InputMethodTextChanged(evt);
            }
        });

        jButton1.setText("Decompress");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Logout");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\vishesh bangla\\Desktop\\CUHP2 copy.png")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2)
                        .addGap(118, 118, 118)
                        .addComponent(ff, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jButton1)))
                .addGap(77, 77, 77))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(19, 19, 19)
                .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ff, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void c1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c1MouseClicked
    }//GEN-LAST:event_c1MouseClicked

    private void c1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c1MouseReleased
    }//GEN-LAST:event_c1MouseReleased

    private void c1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_c1InputMethodTextChanged
    }//GEN-LAST:event_c1InputMethodTextChanged

    private void c1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_c1ItemStateChanged
        // TODO add your handling code here:
             try
            {
            myconnection obj=new myconnection();
            String q="select * from tbimages where username=? and title=? and id=?";
            ResultSet rs;
            PreparedStatement pst=obj.db.prepareStatement(q);
            pst.setString(1,user);
            pst.setString(2,c1.getSelectedItem().substring(0, c1.getSelectedItem().lastIndexOf("_")));
            String n=c1.getSelectedItem().substring(c1.getSelectedItem().lastIndexOf("_")+1);
            pst.setInt(3, Integer.parseInt(n));
            rs=pst.executeQuery();
            if(rs.next())
            {
                byte[] bc=rs.getBytes("Compressed");
                System.out.println("compressed s "+bc);
                BufferedImage bic=ImageIO.read(new ByteArrayInputStream(bc));
		int type = bic.getType() == 0? BufferedImage.TYPE_INT_ARGB : bic.getType();
		BufferedImage resizeImageJpg = resizeImage(bic, type);
                ImageIcon fc=new ImageIcon(resizeImageJpg);
                l1.setIcon(fc);
            }
         }
         catch(Exception e)
         {
             System.out.println(e.getMessage());
         }
    }//GEN-LAST:event_c1ItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(c1.getSelectedIndex()==0)
        {
            JOptionPane.showMessageDialog(this, "Please Select Some Image");
        }
        else
        {
        JFileChooser f=new JFileChooser();
        f.setDialogTitle("Specify a file to save");
        f.addChoosableFileFilter(new FileNameExtensionFilter("png", "png"));
        f.addChoosableFileFilter(new FileNameExtensionFilter("gif Image", "gif"));
        f.setFileFilter(new FileNameExtensionFilter("jpeg", "jpeg"));
        File dir=new File("C:\\Users\\vishesh bangla\\Desktop");
        f.setCurrentDirectory(dir);
        int s=f.showSaveDialog(null);
        if(s==f.APPROVE_OPTION)
        {
            try
            {
                myconnection obj=new myconnection();
                String q="select * from tbimages where username=? and title=? and id=?";
                ResultSet rs;
                PreparedStatement pst=obj.db.prepareStatement(q);
                pst.setString(1,user);
                pst.setString(2,c1.getSelectedItem().substring(0, c1.getSelectedItem().lastIndexOf("_")));
                String n=c1.getSelectedItem().substring(c1.getSelectedItem().lastIndexOf("_")+1);
                pst.setInt(3, Integer.parseInt(n));
                rs=pst.executeQuery();
                int i=0,j=0;
                if(rs.next())
                {
                    InputStream in = rs.getBinaryStream(2);
                    OutputStream fo = new FileOutputStream(f.getSelectedFile()+"."+f.getFileFilter().getDescription());
                    int c = 0;
                    byte[] b=new byte[2048];
                    while ((c = in.read(b)) > -1) {
                        fo.write(b,0,c);
                    }
                    fo.close();
                    in.close();
                    JOptionPane.showMessageDialog(this, "Downlaod Complete");
                }
            }
            catch(Exception e1)
            {
                System.out.println(e1.getMessage());
            }
        }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        MyAccount obj=new MyAccount(user);
        obj.setVisible(true);
        this.setVisible(false);
        obj.setLocation(this.getLocation());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Login obj1=new Login();
        obj1.setVisible(true);
        this.setVisible(false);
        obj1.setLocation(this.getLocation());
    }//GEN-LAST:event_jButton3ActionPerformed
private static BufferedImage resizeImage(BufferedImage originalImage, int type){
	BufferedImage resizedImage = new BufferedImage(IMG_WIDTH, IMG_HEIGHT, type);
	Graphics2D g = resizedImage.createGraphics();
	g.drawImage(originalImage, 0, 0, IMG_WIDTH, IMG_HEIGHT, null);
	g.dispose();
		
	return resizedImage;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Decompression.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Decompression.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Decompression.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Decompression.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Decompression().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Choice c1;
    private javax.swing.JLabel ff;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel l1;
    // End of variables declaration//GEN-END:variables

  
}
